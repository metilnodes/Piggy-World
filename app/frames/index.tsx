"use client"

import { sdk } from "@farcaster/miniapp-sdk"

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –≤ Warpcast
export function isInWarpcast(): boolean {
  if (typeof window === "undefined") return false

  const userAgent = navigator.userAgent.toLowerCase()
  const isWarpcastUA = userAgent.includes("warpcast") || userAgent.includes("farcaster")
  const isFramed = window.parent !== window
  const referrerCheck = document.referrer.includes("warpcast") || document.referrer.includes("farcaster")

  return isWarpcastUA || isFramed || referrerCheck
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Frame SDK
export async function initFrames(): Promise<void> {
  try {
    console.log("üöÄ Initializing Frame SDK...")

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º SDK
    await sdk.actions.ready()

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º SDK –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º –æ–±—ä–µ–∫—Ç–µ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –¥—Ä—É–≥–∏—Ö —á–∞—Å—Ç–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    ;(window as any).sdk = sdk

    console.log("‚úÖ Frame SDK initialized successfully and made globally available")
  } catch (error) {
    console.error("‚ùå Failed to initialize Frame SDK:", error)
    throw error
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è QuickAuth
export async function performQuickAuth(): Promise<{
  success: boolean
  fid?: string
  token?: string
  error?: string
}> {
  try {
    console.log("üîê Performing QuickAuth...")

    // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ SDK –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
    await sdk.actions.ready()

    // –í—ã–ø–æ–ª–Ω—è–µ–º QuickAuth
    const result = await sdk.actions.quickAuth()

    if (result && result.token) {
      console.log("‚úÖ QuickAuth successful")
      return {
        success: true,
        fid: result.fid?.toString(),
        token: result.token,
      }
    } else {
      console.log("‚ö†Ô∏è QuickAuth returned no result")
      return {
        success: false,
        error: "No authentication result",
      }
    }
  } catch (error: any) {
    console.error("‚ùå QuickAuth failed:", error)
    return {
      success: false,
      error: error.message || "QuickAuth failed",
    }
  }
}

// –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è Mini App
export async function initAndMaybeAddMiniApp(): Promise<void> {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –≤ Warpcast
    if (!isInWarpcast()) {
      console.log("‚ÑπÔ∏è Not in Warpcast, skipping Frame SDK initialization")
      return
    }

    console.log("üöÄ Initializing Farcaster SDK and checking for addMiniApp...")

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º SDK
    await initFrames()

    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
    const context = await sdk.getContext()
    console.log("üîç SDK Context:", context)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –¥–æ–±–∞–≤–∏—Ç—å Mini App
    if (context?.client?.added === false && context?.client?.type === "warpcast") {
      console.log("‚ÑπÔ∏è Mini App not added yet, prompting...")
      await sdk.actions.addMiniApp()
      console.log("‚úÖ Mini App prompt triggered")
    } else {
      console.log("‚ÑπÔ∏è Mini App already added or context unavailable")
    }
  } catch (err: any) {
    console.error("‚ùå Error in initAndMaybeAddMiniApp:", err)
  }
}
